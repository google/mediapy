[project]
name = "mediapy"
description = "Read/write/show images and videos in an IPython notebook"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [{name = "Google LLC", email="mediapy-owners@google.com"}]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: Multimedia :: Video :: Display",
]
keywords = []

# pip dependencies of the project
dependencies = [
    "ipython",
    "matplotlib",
    "numpy",
    "Pillow",
]

# This is set automatically by flit using `mediapy.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google/mediapy"
repository = "https://github.com/google/mediapy"
# Other: `documentation`, `changelog`

[project.optional-dependencies]
# Development deps (unittest, linting, formatting,...)
# Installed through `pip install .[dev]`
dev = [
    "absl-py",
    "pyink",
    "pylint>=2.6.0",
    "pytest",
    "pytest-xdist",
    "pytype",
]

[build-system]
requires = ["flit_core >=3.5,<4"]
build-backend = "flit_core.buildapi"

[tool.autopep8]
indent_size = 2
max_line_length = 80
ignore = "E121,E125,E126,E129,E226,E302,E305,E501,W504,E741,W503"
aggressive = 3
recursive = true

[tool.mypy]
strict = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mediapy_test"
ignore_errors = true

[[tool.mypy.overrides]]
module = "mediapy_examples"
disallow_untyped_calls = false
disallow_untyped_defs = false

[tool.pyink]
# Formatting configuration to follow Google style-guide.
line-length = 80
preview = true
pyink-indentation = 2
pyink-use-majority-quotes = true
# Ignore both *.ipynb and .ipynb_checkpoints/.
extend-exclude = "\\.ipynb"

[tool.pylint.main]
disable = [
    "unspecified-encoding", "line-too-long", "too-many-lines",
    "too-few-public-methods", "too-many-locals", "too-many-instance-attributes",
    "too-many-branches", "too-many-statements", "too-many-arguments",
    "using-constant-test", "wrong-import-order", "use-dict-literal",
    "missing-module-docstring",
]
reports = false
score = false
recursive = true
ignore-paths = [".*ipynb_checkpoints", "^.pytype", ".*/.pytype"]

[tool.pylint.basic]
good-names-rgxs = "^[a-z][a-z0-9]?|[A-Z]([A-Z_]*[A-Z])?$"

[tool.pylint.format]
indent-string = "  "
expected-line-ending-format = "LF"

[tool.pytype]
keep_going = true
strict_none_binding = true
use_enum_overlay = true
use_fiddle_overlay = true
